include:
  - project: "dumarca/ci-templates"
    file: "cd-templates/fragment/entrypoint.yml"

variables:
  APP_CONFIG: design-system-fragment
  FRAGMENT_IMAGE: jfrog-mt1.gamesys.co.uk/enjoy-infrastructure-docker-release-local/node:18.14

  # Sonar variables
  SONAR_SOURCES: platform/components/src,platform/tokens/assets,platform/tokens/transformer
  SONAR_TESTS: platform/components/src,platform/tokens/transformer
  SONAR_TEST_INCLUSIONS: platform/components/src/**/*.test.ts,platform/tokens/transformer/**/*.test.js
  SONAR_INCLUSIONS: platform/components/src/**,platform/tokens/assets/**,platform/tokens/transformer/**,platform/tokens/storage/**
  SONAR_EXCLUSIONS: platform/components/src/**/*.test.ts,platform/components/src/**/*.stories.ts,platform/tokens/transformer/**/*.test.js
  SONAR_PHP_TESTS_REPORTPATH: "" # PHP is not used
  SONAR_PHP_COVERAGE_REPORTPATHS: "" # PHP is not used
  SONAR_JAVASCRIPT_FILE_SUFFIXES: .js

build_application:
  before_script:
    - echo "[INFO] Building application"
  script:
    - echo "[INFO] Tokens"
    - cd ./platform/tokens
    - npm ci --no-audit --cache .npm --prefer-offline
    - npm run build
    - echo "[INFO] Components"
    - cd ../components
    - npm ci --no-audit --cache .npm --prefer-offline
    - npm run build
    - echo "[INFO] Platform"
    - cd ../
    - npm ci --no-audit --cache .npm --prefer-offline
    - echo "[INFO] Main Fragment Folder"
    - cd ../
    - find platform/node_modules platform/tokens/assets platform/tokens/transformer platform/tokens/node_modules platform/tokens/package.json platform/components/src platform/components/node_modules platform/components/package.json -type f -print0 | xargs -0 sha256sum > checksums.sha256
  after_script:
    - echo '[INFO] Setting write permissions on files'
    - chmod -R a+w $CI_PROJECT_DIR/platform
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ./platform/tokens/.npm
      - ./platform/tokens/node_modules
      - ./platform/components/.npm
      - ./platform/components/node_modules
      - ./platform/.npm
      - ./platform/node_modules
  artifacts:
    paths:
      - ./platform/tokens/assets
      - ./platform/tokens/dist
      - ./platform/tokens/node_modules
      - ./platform/components/dist
      - ./platform/components/node_modules
      - ./platform/node_modules
      - ./checksums.sha256

javascript_lint:
  before_script:
    - echo "[INFO] Nothing to do"
  script:
    - cd ./platform/tokens
    - npm run lint
    - cd ../components
    - npm run lint
    - cd ../
    - npm run lint

php_lint:
  script:
    - echo "[INFO] No PHP code to lint"

php_unit_integration_tests:
  before_script:
    - echo "[INFO] Nothing to do"
  script:
    - echo "[INFO] No PHP code to test"

javascript_unit_integration_tests:
  image: mcr.microsoft.com/playwright:v1.35.0-jammy # TODO: replace outsourced image to internal one
  variables:
    JEST_JUNIT_OUTPUT_DIR: ${CI_PROJECT_DIR}/platform/reports/js
  script:
    - 'cd ./platform'
    - 'npm run test'
  coverage: /Code coverage:.*?m(\d*\.?\d+)\s%/
  artifacts:
    expire_in: 1 hour
    when: always
    paths:
      - ./platform/reports/js
      - ./platform/allure-results
    reports:
      junit: ./platform/reports/js/junit.xml

typescript_check:
  extends: .sca_base_job
  script:
    - cd ./platform/components/
    - npx tsc

generate_storybook:
  image: "$FRAGMENT_IMAGE"
  stage: publish
  needs:
    - job: build_application
  script:
    - cd ./platform/components
    - npm run build:theme-switcher
    - npm run build:storybook
  tags:
    - docker
  artifacts:
    expire_in: 1 hour
    paths:
      - ./platform/components/storybook

pages:
  rules:
    - if: "$CI_DEFAULT_BRANCH == $CI_COMMIT_REF_NAME"
      when: always
    - if: "$CI_COMMIT_TAG"
      when: always
    - when: manual
  needs:
    - job: generate_storybook
    - job: generate_report
      artifacts: true
      optional: true
  tags:
    - docker
  script:
    - mkdir public;
    - if [ "$CI_COMMIT_REF_NAME" = "$CI_DEFAULT_BRANCH" ]; then
        echo "Collecting test report";
        mv report/* public;
      fi;
    - echo '[INFO] Create necessary folders'
    - mkdir -p "public/storybook"
    - echo '[INFO] Move assets to public folder'
    - mv ./platform/components/storybook/* "public/storybook"
    - echo "[INFO] Spark Storybook URL https://dumarca.gitpages.enjoy-platform.net/design-system-fragment/storybook/"
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    paths:
      - public

generate_report: # Override job since we want this to run only in the "Default Branch"
  rules:
    - if: "$CI_DEFAULT_BRANCH == $CI_COMMIT_REF_NAME"
      when: always
    - if: "$CI_COMMIT_TAG"
      when: always
    - when: never

pages:artifact:
  rules:
    - when: never # Disable job since we only view the reports locally
